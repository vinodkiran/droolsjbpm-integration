<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.kie.remote.ws</groupId>
    <artifactId>kie-remote-ws</artifactId>
    <version>7.0.0-SNAPSHOT</version>
  </parent>

  <packaging>jar</packaging>
  <artifactId>kie-remote-ws-wsdl</artifactId>
  <name>KIE Remote Webservices :: WSDL generated classe </name>

  <dependencies>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-internal</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie.remote</groupId>
      <artifactId>kie-remote-jaxb</artifactId>
    </dependency>
    
    <!-- generated code -->
    <dependency>
      <groupId>org.kie.remote.ws</groupId>
      <artifactId>kie-remote-ws-common</artifactId>
    </dependency>
  </dependencies>
  
  <properties>
    <bugfix.version>1</bugfix.version>
  </properties>
  
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <!--  0. delete all generated files because only the WSDL determines code, no code in VCS -->
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/generated</directory>
              <includes>
                <include>**/*.java</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <!-- 1. add src/main/generated so that generated classes are added to jar -->
          <execution>
            <id>add-generated-sources</id>
            <phase>initialize</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/generated</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <!-- 2. copy wsdl file to target/classes so that "VERSION" in wsdl file can be replaced with appropriate value, before compile -->
          <execution>
            <id>copy-wsdl-to-target</id>
            <!-- here the phase you need -->
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
                <outputDirectory>${project.build.directory}/classes</outputDirectory>
                <resources>
                    <resource>
                        <directory>src/main/resources/</directory>
                    </resource>
                </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <executions>
          <!-- 3. replace "VERSION" in WSDL file with project version + bugfix version -->
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>replace</goal>
            </goals>                    
          </execution>
        </executions>
        <configuration>
          <basedir>${project.build.directory}/classes/META-INF/wsdl</basedir>
          <includes>
            <include>DeploymentService.wsdl</include>
            <include>HistoryService.wsdl</include>
            <include>ProcessService.wsdl</include>
            <include>TaskService.wsdl</include>
            <include>KnowledgeService.wsdl</include>
          </includes>
          <regex>true</regex>
          <replacements>
            <replacement>
              <token>VERSION</token>
              <value>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${bugfix.version}</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>
                <!-- 
                <wsdlFile>HistoryService.wsdl</wsdlFile>
                <wsdlFile>ProcessService.wsdl</wsdlFile>
                <wsdlFile>TaskService.wsdl</wsdlFile>
                <wsdlFile>KnowledgeService.wsdl</wsdlFile>
                -->
      <plugin>
        <groupId>org.jvnet.jax-ws-commons</groupId>
        <artifactId>jaxws-maven-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <!-- 4. generate classes based on WSDL to be included in jar -->
          <execution>
            <id>wsimport-from-jdk-deployment</id>
            <phase>process-resources</phase>
            <goals>
              <goal>wsimport</goal>
            </goals>
            <configuration>
              <executable>${tool.wsimport}</executable>
              <sourceDestDir>${basedir}//src/main/generated</sourceDestDir>
              <packageName>org.kie.remote.services.ws.deployment.generated</packageName>
              <target>2.1</target>
              <!-- Following configuration will invoke wsimport once for each wsdl. -->
              <wsdlLocation>file:///wsdl/*</wsdlLocation>
              <wsdlDirectory>${project.build.directory}/classes/META-INF/wsdl</wsdlDirectory>
              <wsdlFiles>
                <wsdlFile>DeploymentService.wsdl</wsdlFile>
              </wsdlFiles>
            </configuration>
          </execution>
          <execution>
            <id>wsimport-from-jdk-history</id>
            <phase>process-resources</phase>
            <goals>
              <goal>wsimport</goal>
            </goals>
            <configuration>
              <executable>${tool.wsimport}</executable>
              <sourceDestDir>${basedir}//src/main/generated</sourceDestDir>
              <packageName>org.kie.remote.services.ws.history.generated</packageName>
              <target>2.1</target>
              <!-- Following configuration will invoke wsimport once for each wsdl. -->
              <wsdlLocation>file:///wsdl/*</wsdlLocation>
              <wsdlDirectory>${project.build.directory}/classes/META-INF/wsdl</wsdlDirectory>
              <wsdlFiles>
                <wsdlFile>HistoryService.wsdl</wsdlFile>
              </wsdlFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <!-- setup corresponding executables on win/*nix -->
  <profiles>
    <profile>
      <id>win</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <tool.wsgen>${java.home}/../bin/wsgen.exe</tool.wsgen>
        <tool.wsimport>${java.home}/../bin/wsimport.exe</tool.wsimport>
      </properties>
    </profile>
    <profile>
      <id>nix</id>
      <activation>
        <os>
          <family>!windows</family>
        </os>
      </activation>
      <properties>
        <tool.wsgen>${java.home}/../bin/wsgen</tool.wsgen>
        <tool.wsimport>${java.home}/../bin/wsimport</tool.wsimport>
      </properties>
    </profile>
  </profiles>
</project>
